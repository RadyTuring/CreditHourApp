@model IEnumerable<Entities.Department>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p id="selectedDepartmentCode">
    <!-- Department code will be displayed here -->
</p>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Department Table -->
<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DepartmentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DepartmentCode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                <tr data-department-code="@item.DepartmentCode" class="selectable-row">
                    <td>
                    @Html.DisplayFor(modelItem => item.DepartmentName)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.DepartmentCode)
                    </td>
                    <td>
                        <a href="javascript:void(0)" class="view-students" data-department-code="@item.DepartmentCode">Students</a>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
        }
    </tbody>
</table>

<!-- Students Table - Initially Hidden -->
<div id="studentsTableContainer" style="display: none;">
    <h3>Students in the Selected Department</h3>
    <table id="studentsTable" class="table table-striped table-dark">
        <thead>
            <tr>
                <th>StudentId</th>
                <th>Name</th>
                <th>year</th>
            </tr>
        </thead>
        <tbody>
            <!-- Students will be dynamically added here -->
        </tbody>
    </table>
</div>

@section Scripts {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                // Add click event to each table row with class 'selectable-row'
                const rows = document.querySelectorAll(".selectable-row");
                rows.forEach(row => {
                    row.addEventListener("click", function () {
                        // Get DepartmentCode from data attribute
                        const departmentCode = row.getAttribute("data-department-code");

                        // Update the p tag with the DepartmentCode
                        const pElement = document.getElementById("selectedDepartmentCode");
                        pElement.textContent = `Selected Department Code: ${departmentCode}`;

                        // Optionally, you can style the selected row to indicate it was clicked
                        rows.forEach(r => r.classList.remove("selected"));
                        row.classList.add("selected");

                        // Call the GetStudents API for this department code
                        fetchStudents(departmentCode);
                    });
                });

                // Add click event to 'Students' links
                const studentLinks = document.querySelectorAll(".view-students");
                studentLinks.forEach(link => {
                    link.addEventListener("click", function () {
                        const departmentCode = link.getAttribute("data-department-code");
                        fetchStudents(departmentCode);
                    });
                });
            });

            function fetchStudents(departmentCode) {
                // Make an AJAX call to the GetAllByDepartment action
                    fetch(`/Student/GetAllByDepartment?id=${departmentCode}`)
                    .then(response => response.json())
                    .then(data => {
                        // Populate the students table
                        const studentsTableBody = document.querySelector("#studentsTable tbody");
                        studentsTableBody.innerHTML = ''; // Clear previous data

                        if (data && data.length > 0) {
                            data.forEach(student => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                    <td>${student.studentId}</td>
                                    <td>${student.studentName}</td>
                                    <td>${student.studyYear}</td>
                                `;
                                studentsTableBody.appendChild(row);
                            });

                            // Show the students table container
                            document.getElementById("studentsTableContainer").style.display = 'block';
                        } else {
                            // If no students are found, display a message
                            const row = document.createElement('tr');
                            row.innerHTML = `<td colspan="3">No students found for this department.</td>`;
                            studentsTableBody.appendChild(row);
                            document.getElementById("studentsTableContainer").style.display = 'block';
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching students:', error);
                        alert('An error occurred while fetching the student data.');
                    });
            }
        </script>

        <style>
            /* Optional: Style the selected row */
            .selected {
                background-color: #dcdcdc;
            }
        </style>
}
